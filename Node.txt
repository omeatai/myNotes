
node -v

const myinterval = global.setInterval(()=>{
    count += 1;
    console.log(`Your number is ${count}`);
}, 2000)

global.setTimeout(()=>{
    clearInterval(myinterval);
}, 10000)


console.log(__dirname);
console.log(__filename);

####################################################
EXPORT -

const men = ['Ben','Jamie','Sam'];
const women = ['Alice','Mary','Shade'];

module.exports = {
    men,
    women
}

####################################################
IMPORT -

const {men, women} = require("./people.js")
console.log(men, women)

const os = require("os")
console.log(os.platform(), os.homedir())

####################################################
READ -

const fs = require('fs');

fs.readFile("./books/thesage.txt", "utf8", (err, data) => {
    if (err) {
    console.log(err);
    } else {
    console.log(data);
    }
})

####################################################
WRITE -

const fs = require('fs');

fs.writeFile("./books/thesage.txt", "The Sage has been replaced.", (err) => {
    if (err) {
    console.log(err);
    } else {
    console.log("File written successfully");
    }
})

####################################################
DELETE AND CREATE FILE -

if(fs.existsSync("./books/thesage.txt")) {
    fs.unlink("./books/thesage.txt", (err) => {
        if (err) {
        console.log(err);
        } else {
        console.log("File deleted successfully");
        }
    })
}else{
    fs.writeFile("./books/thesage.txt", "The Sage has been created.", (err) => {
        if (err) {
        console.log(err);
        } else {
        console.log("File created successfully");
        }
    })
}

####################################################
DELETE AND CREATE FOLDER -

if(!fs.existsSync("./books")) {
    fs.mkdir("./books", (err) => {
        if (err) {
        console.log(err);
        } else {
        console.log("Folder created successfully");
        }
    })
}else {
    fs.rmdir("./books", (err) => {
        if (err) {
        console.log(err);
        } else {
        console.log("Folder deleted successfully");
        }
    })
}

####################################################
STREAMS AND BUFFER/ READ, COPY AND WRITE -

const fs = require("fs");
const readStream = fs.createReadStream("./books/thesage.txt", "utf8");
const writeStream = fs.createWriteStream("./books/thesage2.txt", "utf8");

// readStream.pipe(writeStream);
// const readStream = fs.createReadStream("./books/thesage.txt").pipe(fs.createWriteStream("./books/thesage2.txt"));

readStream.on('data', (chunk) => {
    console.log("---- New Stream -----")
    console.log(chunk);
    writeStream.write("\n---- New Stream -----\n");
    writeStream.write(chunk);
})

####################################################
CREATE SERVER FOR REQUEST AND RESPONSE

const http = require('http')

const server = http.createServer((req, res) => {
    console.log('request made!')
})

server.listen(3000, 'localhost', () => {
    console.log('listening on port 3000')
})



















